PROCEDURE global GET_MODEL_NAMESPACES modelId: integer result: reference
{
    SETL prefixesValues:("")
    CC "Core" GET_CLASS_ID objid:(modelId)
    CC "Core" GET_CLASS_NAME classid:(classid)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"WST Model Namespaces"
    SETL modelNamespacesId:(attrid)
    #attrid
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(modelId) attrid:(modelNamespacesId)
	FOR i in:(rowids)
	{
		CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
		SETL prefixValue:(val)
		CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Dictionary"
		SETL dictionaryValue:(val)
        SETL prefixesValues:(prefixesValues + "@prefix " + prefixValue + " " + dictionaryValue + ".\n")
	}
    SETL prefixesValues:(prefixesValues + "\n")
    SETL result:(prefixesValues)
}
#Probably to serialize models as subgraphs with URIs and Prefixes
PROCEDURE global GET_RESOURCE_ATTRIBUTES objId: integer uriVal: string result: reference
{
    SETL attributesValues:("")
    SETL attributesValues:(attributesValues + uriVal + " a " + ":Resource" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL resourceDescription:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":description" + " " + "\"" + resourceDescription + "\"" + "^^" + "xsd:string" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Comment"
    SETL resourceComment:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasComment" + " " + "\"" + resourceComment + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Open questions"
    SETL resourceOpenQuestions:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasOpenQuestions" + " " + "\"" + resourceOpenQuestions + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Resource type"
    SETL resourceType:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":type" + " " + "\"" + resourceType + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Hourly wages"
    SETL resourceHourlyWages:(STR val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hourlyWages" + " " + "\"" + resourceHourlyWages + "\"" + "^^" + "xsd:float" + ".\n")
    #not serializing the additional triples attribute
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"General purpose attribute"
    SETL resourceGeneralPurpose:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":generalPurpose" + " " + "\"" + resourceGeneralPurpose + "\"" + ".\n")
    
    #RDF Enrichment
    CC "Core" GET_CLASS_ID objid:(objId)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"RDF Enrichment"
    SETL attributeId:(attrid)
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Subject"
		SETL subject:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Predicate"
		SETL predicate:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Object"
		SETL object:(val)

        IF(subject = "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + uriVal + " " + predicate + " " + object + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object = "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + uriVal + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + object + ".\n")
        }
    }

    SETL result:(attributesValues)
}

PROCEDURE global GET_ORGANIZATIONALUNIT_ATTRIBUTES objId: integer uriVal: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL attributesValues:("")
    SETL attributesValues:(attributesValues + uriVal + " a " + ":OrganizationalUnit" + ".\n")
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Model reference"
    SETL modelReferenceAttributeId:(attrid)
    CC "Core" GET_INTERREF objid:(objId) attrid:(modelReferenceAttributeId)
    CC "Core" GET_INTERREF_COUNT objid:(objId) attrid:(modelReferenceAttributeId)
    SETL intrfCount:(count)
    IF(intrfCount > 0)
    {
        SETL modelIdToEnter:(tmodelid)
        CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
        IF (NOT(isopened))
        {
            CC "Modeling" OPEN modelids:(modelIdToEnter)
        }
        #CC "Core" GET_ATTR_VAL objid:(modelIdToEnter) attrname:"Prefix"
        #SETL modelPrefix:(val)
        CC "Core" GET_ATTR_VAL objid:(modelIdToEnter) attrname:"URI"
        SETL modelUriValue:(val)
        SETL modelPrefixUri:(modelUriValue)
        SETL attributesValues:(attributesValues + uriVal + " :referedIn " + modelPrefixUri + ".\n")
    }
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Order"
    SETL organizationalUnitOrder:(STR val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":order" + " " + "\"" + organizationalUnitOrder + "\"" + "^^" + "xsd:integer" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL organizationalUnitDescription:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":description" + " " + "\"" + organizationalUnitDescription + "\"" + "^^" + "xsd:string" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Comment"
    SETL organizationalUnitComment:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasComment" + " " + "\"" + organizationalUnitComment + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Open questions"
    SETL organizationalUnitOpenQuestions:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasOpenQuestions" + " " + "\"" + organizationalUnitOpenQuestions + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Type"
    SETL organizationalUnitType:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":type" + " " + "\"" + organizationalUnitType + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Manager"
    SETL organizationalUnitManager:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasManager" + " " + "\"" + organizationalUnitManager + "\"" + ".\n")
    #Maybe to use URI for manager
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Function"
    SETL organizationalUnitFunction:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasFunction" + " " + "\"" + organizationalUnitFunction + "\"" + ".\n")
    #not serializing the additional triples attribute
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"General purpose attribute"
    SETL organizationalUnitGeneralPurpose:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":generalPurpose" + " " + "\"" + organizationalUnitGeneralPurpose + "\"" + ".\n")
    
    #RDF Enrichment
    CC "Core" GET_CLASS_ID objid:(objId)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"RDF Enrichment"
    SETL attributeId:(attrid)
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Subject"
		SETL subject:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Predicate"
		SETL predicate:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Object"
		SETL object:(val)

        IF(subject = "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + uriVal + " " + predicate + " " + object + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object = "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + uriVal + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + object + ".\n")
        }
    }
    
    SETL result:(attributesValues)
}

PROCEDURE global GET_PERFORMER_ATTRIBUTES objId: integer uriVal: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL attributesValues:("")
    SETL attributesValues:(attributesValues + uriVal + " a " + ":Performer" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL performerDescription:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":description" + " " + "\"" + performerDescription + "\"" + "^^" + "xsd:string" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Comment"
    SETL performerComment:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasComment" + " " + "\"" + performerComment + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Open questions"
    SETL performerOpenQuestions:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasOpenQuestions" + " " + "\"" + performerOpenQuestions + "\"" + ".\n")
    
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Further education"
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Seminar title"
		SETL seminarTitle:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Participation in"
		SETL seminarParticipationDate:(val)
		SET attributesValues:(attributesValues + uriVal + " " + ":participatedIn" + " " + "[" + " " + ":title" + " " + seminarTitle + "; " + ":participationDate" + " " + seminarParticipationDate + "; " + "a" + " " + ":Seminar" + " ].\n")
    }
     
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Hourly wages"
    SETL performerHourlyWages:(STR val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hourlyWages" + " " + "\"" + performerHourlyWages + "\"" + "^^" + "xsd:float" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Availability"
    SETL performerAvailability:(STR val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":availabilityPercent" + " " + "\"" + performerAvailability + "\"" + ".\n")

    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Provided experience"
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"has Experience in"
		SETL expereinceField:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Experience"
		SETL experienceYears:(STR val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Description"
		SETL experienceDescription:(val)
		SET attributesValues:(attributesValues + uriVal + " " + ":hasExperience" + " " + "[" + " " + ":field" + " " + "\"" + expereinceField + "\"" + "; " + ":years" + " " + "\"" + experienceYears + "\"" + "; " + ":experienceDescription" + " " + "\"" + experienceDescription + "\"" + "; " + "a" + " " + ":WorkExperience" + " ].\n")
    }

    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"General purpose attribute"
    SETL performerGeneralPurpose:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":generalPurpose" + " " + "\"" + performerGeneralPurpose + "\"" + ".\n")
    
    #RDF Enrichment
    CC "Core" GET_CLASS_ID objid:(objId)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"RDF Enrichment"
    SETL attributeId:(attrid)
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Subject"
		SETL subject:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Predicate"
		SETL predicate:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Object"
		SETL object:(val)

        IF(subject = "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + uriVal + " " + predicate + " " + object + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object = "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + uriVal + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + object + ".\n")
        }
    }

    SETL result:(attributesValues)
}

PROCEDURE global GET_AUTOMATEDPERFORMER_ATTRIBUTES objId: integer uriVal: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL attributesValues:("")
    SETL attributesValues:(attributesValues + uriVal + " a " + ":AutomatedPerformer" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL performerDescription:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":description" + " " + "\"" + performerDescription + "\"" + "^^" + "xsd:string" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Comment"
    SETL performerComment:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasComment" + " " + "\"" + performerComment + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Open questions"
    SETL performerOpenQuestions:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasOpenQuestions" + " " + "\"" + performerOpenQuestions + "\"" + ".\n")
    
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Type"
    SETL performerType:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasType" + " " + "\"" + performerType + "\"" + ".\n")

    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Realized By"
    SETL realizedByAttributeId:(attrid)
    CC "Core" GET_INTERREF objid:(objId) attrid:(realizedByAttributeId)
    CC "Core" GET_INTERREF_COUNT objid:(objId) attrid:(realizedByAttributeId)
    SETL intrfCount:(count)
    IF(intrfCount > 0)
    {
        SETL modelIdToEnter:(tmodelid)
        CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
        IF (NOT(isopened))
        {
            CC "Modeling" OPEN modelids:(modelIdToEnter)
        }
        #CC "Core" GET_ATTR_VAL objid:(modelIdToEnter) attrname:"Prefix"
        #SETL modelPrefix:(val)
        CC "Core" GET_ATTR_VAL objid:(modelIdToEnter) attrname:"URI"
        SETL modelUriValue:(val)
        SETL modelPrefixUri:(modelUriValue)
        SETL attributesValues:(attributesValues + uriVal + " :realizedBy " + modelPrefixUri + ".\n")
    }

    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Built Using Technology"
    SETL builtUsingTechnologyAttributeId:(attrid)
    CC "Core" GET_INTERREF objid:(objId) attrid:(builtUsingTechnologyAttributeId)
    CC "Core" GET_INTERREF_COUNT objid:(objId) attrid:(builtUsingTechnologyAttributeId)
    SETL intrfCount:(count)
    IF(intrfCount > 0)
    {
        SETL modelIdToEnter:(tmodelid)
        SETL targetObjName:(tobjname)
        SETL targetObjClassId:(tclassid)
        CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
        IF (NOT(isopened))
        {
            CC "Modeling" OPEN modelids:(modelIdToEnter)
        }

        CC "Core" GET_OBJ_ID modelid:(modelIdToEnter) classid:(targetObjClassId) objname:(targetObjName)
        #CC "Core" GET_ATTR_VAL objid:(objid) attrname:"Prefix"
        #SETL objPrefix:(val)
        CC "Core" GET_ATTR_VAL objid:(objid) attrname:"URI"
        SETL objUri:(val)
        SETL objPrefixUri:(objUri)
        SETL attributesValues:(attributesValues + uriVal + " :builtUsingTechnology " + objPrefixUri + ".\n")
    }
    
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Availability"
    SETL performerAvailability:(STR val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":availabilityPercent" + " " + "\"" + performerAvailability + "\"" + ".\n")

    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"General purpose attribute"
    SETL performerGeneralPurpose:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":generalPurpose" + " " + "\"" + performerGeneralPurpose + "\"" + ".\n")
    
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Detailed execution"
    SETL detailedExecutionAttributeId:(attrid)
    CC "Core" GET_INTERREF objid:(objId) attrid:(detailedExecutionAttributeId)
    CC "Core" GET_INTERREF_COUNT objid:(objId) attrid:(detailedExecutionAttributeId)
    SETL intrfCount:(count)
    IF(intrfCount > 0)
    {
        SETL modelIdToEnter:(tmodelid)
        CC "Modeling" IS_OPENED modelid:(modelIdToEnter)
        IF (NOT(isopened))
        {
            CC "Modeling" OPEN modelids:(modelIdToEnter)
        }

        #CC "Core" GET_ATTR_VAL objid:(modelIdToEnter) attrname:"Prefix"
        #SETL modelPrefix:(val)
        CC "Core" GET_ATTR_VAL objid:(modelIdToEnter) attrname:"URI"
        SETL modelUriValue:(val)
        SETL modelPrefixUri:(modelUriValue)
        SETL attributesValues:(attributesValues + uriVal + " :executedIn " + modelPrefixUri + ".\n")
    }

    #RDF Enrichment
    CC "Core" GET_CLASS_ID objid:(objId)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"RDF Enrichment"
    SETL attributeId:(attrid)
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Subject"
		SETL subject:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Predicate"
		SETL predicate:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Object"
		SETL object:(val)

        IF(subject = "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + uriVal + " " + predicate + " " + object + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object = "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + uriVal + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + object + ".\n")
        }
    }
    
    SETL result:(attributesValues)
}

PROCEDURE global GET_ROLE_ATTRIBUTES objId: integer uriVal: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL attributesValues:("")
    SETL attributesValues:(attributesValues + uriVal + " a " + ":Role" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL roleDescription:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":description" + " " + "\"" + roleDescription + "\"" + "^^" + "xsd:string" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Comment"
    SETL roleComment:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasComment" + " " + "\"" + roleComment + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Open questions"
    SETL roleOpenQuestions:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasOpenQuestions" + " " + "\"" + roleOpenQuestions + "\"" + ".\n")
    
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Required experience"
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"has Experience in"
		SETL expereinceField:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Experience"
		SETL experienceYears:(STR val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Description"
		SETL experienceDescription:(val)
		SET attributesValues:(attributesValues + uriVal + " " + ":requiresExperience" + " " + "[" + " " + ":field" + " " + expereinceField + "; " + ":years" + " " + experienceYears + "; " + ":experienceDescription" + " " + experienceDescription + "; " + "a" + " " + ":WorkExperience" + " ].\n")
    }

    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"General purpose attribute"
    SETL roleGeneralPurpose:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":generalPurpose" + " " + "\"" + roleGeneralPurpose + "\"" + ".\n")
    
    #RDF Enrichment
    CC "Core" GET_CLASS_ID objid:(objId)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"RDF Enrichment"
    SETL attributeId:(attrid)
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Subject"
		SETL subject:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Predicate"
		SETL predicate:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Object"
		SETL object:(val)

        IF(subject = "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + uriVal + " " + predicate + " " + object + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object = "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + uriVal + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + object + ".\n")
        }
    }

    SETL result:(attributesValues)
}

PROCEDURE global GET_POSITION_ATTRIBUTES objId: integer uriVal: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL attributesValues:("")
    SETL attributesValues:(attributesValues + uriVal + " a " + ":Position" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL positionDescription:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":description" + " " + "\"" + positionDescription + "\"" + "^^" + "xsd:string" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Comment"
    SETL positionComment:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasComment" + " " + "\"" + positionComment + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Open questions"
    SETL positionOpenQuestions:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasOpenQuestions" + " " + "\"" + positionOpenQuestions + "\"" + ".\n")

    CC "Core" GET_ATTR_ID classid:(classid) attrname:"Position holders"
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Title"
		SETL title:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"First name"
		SETL firstName:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Surname"
		SETL surname:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Personal number"
		SETL personalNumber:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Occupational percentage"
		SETL occupationalPercentage:(val)
		SET attributesValues:(attributesValues + uriVal + " " + ":hasHolders" + " " + "[" + " " + ":title" + " " + title + "; " + ":firstName" + " " + firstName + "; " + ":surname" + " " + surname + "; " + ":personalNumber" + " " + personalNumber + "; " + ":occupationalPercentage" + " " + occupationalPercentage + "; " + "a" + " " + ":PositionHolder" + " ].\n")
    }

    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Position capacity"
    SETL positionCapacity:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":positionCapacity" + " " + "\"" + positionCapacity + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Cost center"
    SETL costCenter:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasCostCenter" + " " + "\"" + costCenter + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Vacant"
    SETL vacant:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":vacant" + " " + "\"" + vacant + "\"" + ".\n")

    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"General purpose attribute"
    SETL roleGeneralPurpose:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":generalPurpose" + " " + "\"" + roleGeneralPurpose + "\"" + ".\n")
    
    #RDF Enrichment
    CC "Core" GET_CLASS_ID objid:(objId)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"RDF Enrichment"
    SETL attributeId:(attrid)
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Subject"
		SETL subject:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Predicate"
		SETL predicate:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Object"
		SETL object:(val)

        IF(subject = "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + uriVal + " " + predicate + " " + object + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object = "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + uriVal + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + object + ".\n")
        }
    }

    SETL result:(attributesValues)
}

PROCEDURE global GET_COSTCENTER_ATTRIBUTES objId: integer uriVal: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL attributesValues:("")
    SETL attributesValues:(attributesValues + uriVal + " a " + ":CostCenter" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL costCenterDescription:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":description" + " " + "\"" + costCenterDescription + "\"" + "^^" + "xsd:string" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Comment"
    SETL costCenterComment:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasComment" + " " + "\"" + costCenterComment + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Open questions"
    SETL costCenterOpenQuestions:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasOpenQuestions" + " " + "\"" + costCenterOpenQuestions + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Budget"
    SETL costCenterBudget:(STR val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":budget" + " " + "\"" + costCenterBudget + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"ON times"
    SETL costCenterOnTimes:(STR val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":onTimes" + " " + "\"" + costCenterOnTimes + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"ON fixed costs"
    SETL costCenterOnFixedCosts:(STR val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":onFixedCosts" + " " + "\"" + costCenterOnFixedCosts + "\"" + ".\n")
    
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"General purpose attribute"
    SETL roleGeneralPurpose:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":generalPurpose" + " " + "\"" + roleGeneralPurpose + "\"" + ".\n")
    
    #RDF Enrichment
    CC "Core" GET_CLASS_ID objid:(objId)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"RDF Enrichment"
    SETL attributeId:(attrid)
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Subject"
		SETL subject:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Predicate"
		SETL predicate:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Object"
		SETL object:(val)

        IF(subject = "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + uriVal + " " + predicate + " " + object + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object = "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + uriVal + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + object + ".\n")
        }
    }

    SETL result:(attributesValues)
}

PROCEDURE global GET_SWIMLANE_ATTRIBUTES objId: integer uriVal: string result: reference
{
    CC "Core" GET_CLASS_ID objid:(objId)
    SETL attributesValues:("")
    SETL attributesValues:(attributesValues + uriVal + " a " + ":Swimlane" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Description"
    SETL swimlaneDescription:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":description" + " " + "\"" + swimlaneDescription + "\"" + "^^" + "xsd:string" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Comment"
    SETL swimlaneComment:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasComment" + " " + "\"" + swimlaneComment + "\"" + ".\n")
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"Open questions"
    SETL swimlaneOpenQuestions:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":hasOpenQuestions" + " " + "\"" + swimlaneOpenQuestions + "\"" + ".\n") 
    CC "Core" GET_ATTR_VAL objid:(objId) attrname:"General purpose attribute"
    SETL swimlaneGeneralPurpose:(val)
    SETL attributesValues:(attributesValues + uriVal + " " + ":generalPurpose" + " " + "\"" + swimlaneGeneralPurpose + "\"" + ".\n")
    
    #RDF Enrichment
    CC "Core" GET_CLASS_ID objid:(objId)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:"RDF Enrichment"
    SETL attributeId:(attrid)
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objId) attrid:(attrid)
    FOR i in:(rowids)
    {
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Subject"
		SETL subject:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Predicate"
		SETL predicate:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Object"
		SETL object:(val)

        IF(subject = "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + uriVal + " " + predicate + " " + object + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object = "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + uriVal + ".\n")
        }
        IF(subject != "" AND predicate != "" AND object != "")
        {
            SETL attributesValues:(attributesValues + subject + " " + predicate + " " + object + ".\n")
        }
    }

    SETL result:(attributesValues)
}

#------------------------

CC "Modeling" GET_ACT_MODEL
SETL actModelId: (modelid)

#CC "Core" GET_ATTR_VAL objid:(actModelId) attrname:"Prefix"
#SETL modelPrefix:(val)

CC "Core" GET_ATTR_VAL objid:(actModelId) attrname:"URI"
SETL modelUri:(val)

SETL namespaces:("")
SETL endMessage:("")
GET_MODEL_NAMESPACES modelId:(actModelId) result:namespaces

IF(modelUri != "")
{
    SETL message:(modelUri + "\n" + "{" + "\n")
    SETL message:(namespaces + message)
    SETL endMessage:("}")
    #CC "AdoScript" VIEWBOX text:("Bobr Kurwa")

}
ELSE
{
    SETL message:("")
    SETL message:(message + namespaces)
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"Resource"
SETL resourceElementsObjids:(objids)
FOR i in:(resourceElementsObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    #SETL prefixVal:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL uriVal:(val)
    SETL uriPrefix:(uriVal)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + uriPrefix + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_RESOURCE_ATTRIBUTES objId:(VAL i) uriVal:(uriPrefix) result:resourceAttrs 
    SETL message:(message + resourceAttrs)
    SETL resourceAttrs:("")
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"Organizational Unit"
SETL organizationalUnitElementsObjids:(objids)
FOR i in:(organizationalUnitElementsObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    #SETL prefixVal:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL uriVal:(val)
    SETL uriPrefix:(uriVal)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + uriPrefix + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_ORGANIZATIONALUNIT_ATTRIBUTES objId:(VAL i) uriVal:(uriPrefix) result:organizationalUnitAttrs 
    SETL message:(message + organizationalUnitAttrs)
    SETL organizationalUnitAttrs:("")
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"Performer"
SETL performerElementsObjids:(objids)
FOR i in:(performerElementsObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    #SETL prefixVal:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL uriVal:(val)
    SETL uriPrefix:(uriVal)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + uriPrefix + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_PERFORMER_ATTRIBUTES objId:(VAL i) uriVal:(uriPrefix) result:performerAttrs 
    SETL message:(message + performerAttrs)
    SETL performerAttrs:("")
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"Automated Performer"
SETL automatedPerformerElementsObjids:(objids)
FOR i in:(automatedPerformerElementsObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    #SETL prefixVal:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL uriVal:(val)
    SETL uriPrefix:(uriVal)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + uriPrefix + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_AUTOMATEDPERFORMER_ATTRIBUTES objId:(VAL i) uriVal:(uriPrefix) result:automatedPerformerAttrs 
    SETL message:(message + automatedPerformerAttrs)
    SETL automatedPerformerAttrs:("")
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"Role"
SETL roleElementsObjids:(objids)
FOR i in:(roleElementsObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    #SETL prefixVal:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL uriVal:(val)
    SETL uriPrefix:(uriVal)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + uriPrefix + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_ROLE_ATTRIBUTES objId:(VAL i) uriVal:(uriPrefix) result:roleAttrs 
    SETL message:(message + roleAttrs)
    SETL roleAttrs:("")
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"Position"
SETL positionObjids:(objids)
FOR i in:(positionObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    #SETL prefixVal:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL uriVal:(val)
    SETL uriPrefix:(uriVal)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + uriPrefix + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_POSITION_ATTRIBUTES objId:(VAL i) uriVal:(uriPrefix) result:positionAttrs 
    SETL message:(message + positionAttrs)
    SETL positionAttrs:("")
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"Cost Center"
SETL costCenterObjids:(objids)
FOR i in:(costCenterObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    #SETL prefixVal:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL uriVal:(val)
    SETL uriPrefix:(uriVal)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + uriPrefix + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_COSTCENTER_ATTRIBUTES objId:(VAL i) uriVal:(uriPrefix) result:costCenterAttrs 
    SETL message:(message + costCenterAttrs)
    SETL costCenterAttrs:("")
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"Swimlane (horizontal)"
SETL swimlaneHoObjids:(objids)
FOR i in:(swimlaneHoObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    #SETL prefixVal:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL uriVal:(val)
    SETL uriPrefix:(uriVal)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + uriPrefix + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_SWIMLANE_ATTRIBUTES objId:(VAL i) uriVal:(uriPrefix) result:swimlaneAttrs 
    SETL message:(message + swimlaneAttrs)
    SETL swimlaneAttrs:("")
}

CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"Swimlane (vertical)"
SETL swimlaneVeObjids:(objids)
FOR i in:(swimlaneVeObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    #SETL prefixVal:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL uriVal:(val)
    SETL uriPrefix:(uriVal)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Name"
    SETL label:(val)
    SETL message:(message + uriPrefix + " rdfs:label " + "\"" + label + "\"" + ".\n")
    GET_SWIMLANE_ATTRIBUTES objId:(VAL i) uriVal:(uriPrefix) result:swimlaneAttrs 
    SETL message:(message + swimlaneAttrs)
    SETL swimlaneAttrs:("")
}

#Connectors
CC "Core" GET_ALL_CONNECTORS modelid:(actModelId)
FOR i in:(objids)
{
    CC "Core" GET_CLASS_ID objid:(VAL i)
    CC "Core" GET_CLASS_NAME classid:(classid)
    CC "Core" GET_CONNECTOR_ENDPOINTS objid:(VAL i)
    #CC "Core" GET_ATTR_VAL objid:(fromobjid) attrname:"Prefix"
    #SETL fromPrefix:(val)
    CC "Core" GET_ATTR_VAL objid:(fromobjid) attrname:"URI"
    SETL fromUri:(val)
    SETL fromUri:(fromUri)
    #CC "Core" GET_ATTR_VAL objid:(toobjid) attrname:"Prefix"
    #SETL toPrefix:(val)
    CC "Core" GET_ATTR_VAL objid:(toobjid) attrname:"URI"
    SETL toUri:(val)
    SETL toUri:(toUri)
    IF(classname = "has Role")
    {
        SETL message:(message + fromUri + " :hasRole " + toUri + ".\n")
    }
    IF(classname = "is Subordinated")
    {
        SETL message:(message + fromUri + " :isSubordinated " + toUri + ".\n")
    }
    IF(classname = "has Resource")
    {
        SETL message:(message + fromUri + " :hasResource " + toUri + ".\n")
    }
    IF(classname = "Belongs to")
    {
        SETL message:(message + fromUri + " :belongsTo " + toUri + ".\n")
    }
    IF(classname = "is Manager of")
    {
        SETL message:(message + fromUri + " :isManagerOf " + toUri + ".\n")
    }
    IF(classname = "has Position")
    {
        SETL message:(message + fromUri + " :hasPosition " + toUri + ".\n")
    }
    IF(classname = "uses Resource")
    {
        SETL message:(message + fromUri + " :usesResource " + toUri + ".\n")
    }
    IF(classname = "is Charged to")
    {
        SETL message:(message + fromUri + " :isChargedTo " + toUri + ".\n")
    }
    IF(classname = "is Cost Center Manager of")
    {
        SETL message:(message + fromUri + " :isCostCenterManagerOf " + toUri + ".\n")
    }
    #not addings notes, has Note
}

FOR i in:(swimlaneHoObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("Prefix")
    #SETL swPrefix:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("URI")
    SETL swUri:(val)
    SETL swUri:(swUri)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("Name")
    SETL swName:(val)
    SETL aqlExpr:("{" + "\"" + swName + "\"" + ":\"Swimlane (horizontal)" + "\"" + "}<-" + "\"" + "Is inside" + "\"")
    CC "AQL" EVAL_AQL_EXPRESSION expr:(aqlExpr) modelid:(actModelId)
    SETL objids:(objids)
    FOR i in:(objids)
    {
        #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("Prefix")
        #SETL objPrefix:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("URI")
        SETL objUri:(val)
        SETL objUri:(objUri)
        SETL message:(message + objUri + " :isInside " + swUri + ".\n")
    }
}

FOR i in:(swimlaneVeObjids)
{
    #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("Prefix")
    #SETL swPrefix:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("URI")
    SETL swUri:(val)
    SETL swUri:(swUri)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("Name")
    SETL swName:(val)
    SETL aqlExpr:("{" + "\"" + swName + "\"" + ":\"Swimlane (vertical)" + "\"" + "}<-" + "\"" + "Is inside" + "\"")
    CC "AQL" EVAL_AQL_EXPRESSION expr:(aqlExpr) modelid:(actModelId)
    SETL objids:(objids)
    FOR i in:(objids)
    {
        #CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("Prefix")
        #SETL objPrefix:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:("URI")
        SETL objUri:(val)
        SETL objUri:(objUri)
        SETL message:(message + objUri + " :isInside " + swUri + ".\n")
    }
}

IF (endMessage != "")
{
    SETL message:(message + endMessage)
    CC "AdoScript" VIEWBOX text:(message)
    SETL trigFilePath:("D:\\Andrei\\ModellingTools\\WST_BPMN_Modeling_Tool\\Results\\wem_trig.trig")
    SETL turtleFilePath:("D:\\Andrei\\ModellingTools\\WST_BPMN_Modeling_Tool\\Results\\wem_turtle.ttl")
    CC "AdoScript" FWRITE file:(trigFilePath) text:(message) binary:0
    CC "AdoScript" FWRITE file:(turtleFilePath) text:("") binary:0
    #SETL filePath:("D:\\Andrei\\ModellingTools\\Threat_Modeling_Tool\\Scripts\\Results\\dfd_serialization_type.txt")
    #CC "AdoScript" FWRITE file:(filePath) text:("trig") binary:0
}
ELSE
{
    CC "AdoScript" VIEWBOX text:(message)
    SETL trigFilePath:("D:\\Andrei\\ModellingTools\\WST_BPMN_Modeling_Tool\\Results\\wem_trig.trig")
    SETL turtleFilePath:("D:\\Andrei\\ModellingTools\\WST_BPMN_Modeling_Tool\\Results\\wem_turtle.ttl")
    CC "AdoScript" FWRITE file:(turtleFilePath) text:(message) binary:0
    CC "AdoScript" FWRITE file:(trigFilePath) text:("") binary:0
    #SETL filePath:("D:\\Andrei\\ModellingTools\\Threat_Modeling_Tool\\Scripts\\Results\\dfd_serialization_type.txt")
    #CC "AdoScript" FWRITE file:(filePath) text:("turtle") binary:0
}

